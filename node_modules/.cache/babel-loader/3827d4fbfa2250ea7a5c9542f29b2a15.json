{"ast":null,"code":"import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"overlay\"\n};\nconst _hoisted_2 = {\n  class: \"modal-cont\"\n};\nconst _hoisted_3 = {\n  style: {\n    \"position\": \"relative\"\n  }\n};\n\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"col-12\",\n  style: {\n    \"padding-top\": \"20px\",\n    \"text-align\": \"left !important\"\n  }\n}, [/*#__PURE__*/_createElementVNode(\"h3\", null, \"Leave a message:\")], -1\n/* HOISTED */\n);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"button\", {\n    class: \"btn btn-outline-danger\",\n    style: {\n      \"position\": \"absolute\",\n      \"right\": \"0px\"\n    },\n    onClick: _cache[0] || (_cache[0] = (...args) => _ctx.toggleOverlay && _ctx.toggleOverlay(...args))\n  }, \"X\")]), _hoisted_4])]);\n}","map":{"version":3,"mappings":";;EACSA,KAAK,EAAC;;;EACFA,KAAK,EAAC;;;EACFC,KAAyB,EAAzB;IAAA;EAAA;;;gCAGLC,oBAEM,KAFN,EAEM;EAFDF,KAAK,EAAC,QAEL;EAFcC,KAAqD,EAArD;IAAA;IAAA;EAAA;AAEd,CAFN,gBACIC,oBAAyB,IAAzB,EAAyB,IAAzB,EAAI,kBAAJ,EADJ;;AAAA;;;uBALRC,oBASM,KATN,cASM,CARFD,oBAOM,KAPN,cAOM,CANFA,oBAEM,KAFN,cAEM,CADFA,oBAA8G,QAA9G,EAA8G;IAAtGF,KAAK,EAAC,wBAAgG;IAAvEC,KAAqC,EAArC;MAAA;MAAA;IAAA,CAAuE;IAAhCG,OAAK,yCAAEC,iDAAF;EAA2B,CAA9G,EAAoG,GAApG,CACE,CAFN,CAME,EAHFC,UAGE,CAPN,CAQE,CATN","names":["class","style","_createElementVNode","_createElementBlock","onClick","_ctx","_hoisted_4"],"sourceRoot":"","sources":["/Users/codyjohns/Documents/empire-american/src/components/Modal.vue"],"sourcesContent":["<template>\n    <div class=\"overlay\">\n        <div class=\"modal-cont\">\n            <div style=\"position:relative\">\n                <button class=\"btn btn-outline-danger\" style=\"position: absolute;right:0px;\" @click=\"toggleOverlay\">X</button>\n            </div>\n            <div class=\"col-12\" style=\"padding-top:20px;text-align: left !important;\">\n                <h3>Leave a message:</h3>\n            </div>\n        </div>\n    </div>\n</template>\n\n<style>\n.overlay {\n    width: 100%;\n    height: 100vh;\n    background-color: rgba(0, 0, 0, 0.6);\n    position: fixed;\n    z-index: 1001;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n}\n\n.modal-cont {\n    width:90vw;\n    max-width: 800px;\n    height: 80vh;\n    background-color: #fff;\n    border-radius: 6px;\n    padding: 20px;\n}\n</style>\n\n<script>\nconst Modal = {\n    name: 'Modal',\n    methods: {\n        toggleOverlay() {\n            this.$emit('showOverlay', false);\n        }\n    }\n}\nexport default Modal\n</script>"]},"metadata":{},"sourceType":"module"}